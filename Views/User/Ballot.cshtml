@{
    var ElectionId = ViewBag.ElectionId;
    var electionTypes = ViewBag.ElectionTypes as string; // Get election types
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>eElection</title>
    <meta name="description" content="">
    <meta name="keywords" content="">

    <!-- Favicons -->
    <link href="~/assetss/img/favicon.png" rel="icon">
    <link href="~/assetss/img/apple-touch-icon.png" rel="apple-touch-icon">

    <!-- Fonts -->
    <link href="https://fonts.googleapis.com" rel="preconnect">
    <link href="https://fonts.gstatic.com" rel="preconnect" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&family=Raleway:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Ubuntu:ital,wght@0,300;0,400;0,500;0,700;1,300;1,400;1,500;1,700&display=swap" rel="stylesheet">

    <!-- Vendor CSS Files -->
    <link href="~/assetss/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="~/assetss/vendor/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
    <link href="~/assetss/vendor/aos/aos.css" rel="stylesheet">
    <link href="~/assetss/vendor/glightbox/css/glightbox.min.css" rel="stylesheet">
    <link href="~/assetss/vendor/swiper/swiper-bundle.min.css" rel="stylesheet">

    <!-- Main CSS File -->
    <link href="~/assetss/css/main.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <!-- =======================================================
    * Template Name: eNno
    * Template URL: https://bootstrapmade.com/enno-free-simple-bootstrap-template/
    * Updated: Aug 07 2024 with Bootstrap v5.3.3
    * Author: BootstrapMade.com
    * License: https://bootstrapmade.com/license/
    ======================================================== -->
</head>

<body class="index-page">

    <header id="header" class="header d-flex align-items-center sticky-top">
        <div class="container-fluid container-xl position-relative d-flex align-items-center">

            <a href="index.html" class="logo d-flex align-items-center me-auto">
                <!-- Uncomment the line below if you also wish to use an image logo -->
                <!-- <img src="~/assetss/img/logo.png" alt=""> -->
                <h1 class="sitename">eElection</h1>
            </a>

            <nav id="navmenu" class="navmenu">
                <ul>
                    <li><a asp-controller="User" asp-action="Homes">Home</a></li>
                    <li><a asp-controller="User" asp-action="Candidate">Candidate</a></li>
                    <li><a asp-controller="User" asp-action="Elections">Election</a></li>
                    <li><a asp-controller="User" asp-action="Profile">Profile</a></li>
                    @* <li><a asp-controller="User" asp-action="Logout">Logout</a></li> *@
                    <li class="nav-item dropdown">
                        <form id="logoutForm" asp-controller="Admin" asp-action="Logout" method="post" style="display: none;">
                            <button type="submit"></button>
                        </form>
                        <a class="dropdown-item" href="#" onclick="document.getElementById('logoutForm').submit(); return false;">
                            <i class="mdi mdi-logout me-2 text-primary"></i> Signout
                        </a>
                    </li>
                </ul>
                <i class="mobile-nav-toggle d-xl-none bi bi-list"></i>
            </nav>


        </div>
    </header>
    <main class="main container py-4">
        <div class="row">
            <!-- Ballot Forms -->
            <div class="col-md-8">
                <form action="/" method="post">
                    @if (ViewBag.ElectionId == null || string.IsNullOrEmpty(ViewBag.ElectionTypes))
                    {
                        <div class="alert alert-danger">No election selected.</div>
                    }
                    else
                    {
                        <div class="card mb-3 election-section">
                            <div class="card-header bg-primary text-white">@ViewBag.ElectionTypes Positions</div>
                            <div class="card-body">
                                <table class="table table-sm">
                                    @foreach (var position in ViewBag.Positions)
                                    {
                                        <tr>
                                            <td>@position</td>
                                            <td>
                                                <select class="form-select candidate-dropdown" data-position="@position">
                                                    <option value="">Select Candidate</option>
                                                </select>
                                            </td>
                                        </tr>
                                    }
                                </table>
                            </div>
                        </div>
                    }
                    @{
                        var electionId = ViewBag.ElectionId ?? 0; // Default to 0 if null
                    }

                    <input type="hidden" id="electionId" value="@ViewBag.ElectionId" />

                    <button id="submitVote" class="btn btn-success mt-3">Submit Vote</button>

                </form>
            </div>


       
        </div>
    </main>




    <!-- Scroll Top -->
    <a href="#" id="scroll-top" class="scroll-top d-flex align-items-center justify-content-center"><i class="bi bi-arrow-up-short"></i></a>

    <!-- Preloader -->
    <div id="preloader"></div>

    <!-- Vendor JS Files -->
    <script src="~/assetss/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="~/assetss/vendor/php-email-form/validate.js"></script>
    <script src="~/assetss/vendor/aos/aos.js"></script>
    <script src="~/assetss/vendor/glightbox/js/glightbox.min.js"></script>
    <script src="~/assetss/vendor/purecounter/purecounter_vanilla.js"></script>
    <script src="~/assetss/vendor/imagesloaded/imagesloaded.pkgd.min.js"></script>
    <script src="~/assetss/vendor/isotope-layout/isotope.pkgd.min.js"></script>
    <script src="~/assetss/vendor/swiper/swiper-bundle.min.js"></script>

    <!-- Main JS File -->
    <script src="~/assetss/js/main.js"></script>
    <script>
        var electionType = "@ViewBag.ElectionType";
        console.log("Election Type received:", electionType);
    </script>

    <script>
    $(document).ready(function () {
        $(".candidate-dropdown").each(function () {
            var position = $(this).data("position");
            var selectElement = $(this);

            $.ajax({
                url: "/User/GetCandidates",
                type: "GET",
                data: { position: position },
                success: function (data) {
                    $.each(data, function (index, candidate) {
                        selectElement.append(new Option(candidate.name, candidate.id));
                    });
                }
            });
        });
    });
</script>


    <script>
        $(document).ready(function () {
            let positionMap = {};
            let selectedSenators = [];
            let selectedSanggunianPanlalawigan = [];
            let selectedSanggunianPanlungsod = [];
            let selectedSanggunianBarangay = [];
            let selectedSanggunianKabataan = [];

            function loadPositions() {
                $.ajax({
                    url: '/User/GetPositions',
                    type: 'GET',
                    success: function (response) {
                        if (!response.success || !response.data) {
                            console.error("❌ No positions received from API:", response.message);
                            return;
                        }

                        positionMap = {};
                        response.data.forEach(position => {
                            if (!position.PositionName) return;
                            let formattedPositionName = position.PositionName.toLowerCase().trim();
                            positionMap[formattedPositionName] = position.PositionId;
                        });

                        console.log("📌 Position Map:", positionMap); // Debugging
                        $(".candidate-dropdown").each(function () {
                            let positionName = $(this).attr("data-position").toLowerCase().trim();
                            let positionId = positionMap[positionName];

                            if (positionId) {
                                $(this).attr("data-positionid", positionId);
                                console.log(`✅ Assigned '${positionName}' → ID: ${positionId}`);
                            }
                        });

                        loadAllCandidates();
                        loadSenators();
                        loadSanggunianPanlalawigan();
                        loadSanggunianPanlungsod();
                        loadSanggunianBarangay();
                        loadSanggunianKabataan();
                    },
                    error: function (xhr) {
                        console.error("❌ Error retrieving positions:", xhr.responseText);
                    }
                });
            }

            function loadCandidates(positionName) {
                let dropdown = $(`select[data-position='${positionName}']`);

                if (!dropdown.length) {
                    console.warn(`⚠️ Dropdown not found for '${positionName}'`);
                    return;
                }

                $.ajax({
                    url: '/User/GetCandidatesByPosition',
                    type: 'GET',
                    data: { positionName: positionName },
                    success: function (response) {
                        dropdown.empty().append('<option value="">Select Candidate</option>');

                        if (response.success && response.data.length > 0) {
                            response.data.forEach(candidate => {
                                dropdown.append(`<option value="${candidate.candidateId}" data-positionid="${candidate.positionId}">
                                    ${candidate.fullName}
                                </option>`);
                            });
                        } else {
                            dropdown.append('<option value="">No candidates found</option>');
                        }
                    },
                    error: function (xhr) {
                        console.error(`❌ Error retrieving candidates for ${positionName}:`, xhr.responseText);
                    }
                });
            }

            function loadAllCandidates() {
                $(".candidate-dropdown").each(function () {
                    let positionName = $(this).attr("data-position");
                    if (positionName) {
                        loadCandidates(positionName);
                    }
                });
            }

            function loadSenators() {
                $.ajax({
                    url: '/User/GetCandidatesByPosition',
                    type: 'GET',
                    data: { positionName: "Senators" },
                    success: function (response) {
                        if (response.success && response.data.length > 0) {
                            let senatorContainer = $("#senators-container");
                            senatorContainer.empty();

                            response.data.forEach(candidate => {
                                let checkbox = `<div>
                                    <input type="checkbox" class="senator-checkbox" value="${candidate.candidateId}" data-positionid="${candidate.positionId}">
                                    <label>${candidate.fullName}</label>
                                </div>`;
                                senatorContainer.append(checkbox);
                            });

                            $(".senator-checkbox").change(function () {
                                updateSenatorSelection($(this));
                            });
                        }
                    },
                    error: function (xhr) {
                        console.error("❌ Error retrieving senator candidates:", xhr.responseText);
                    }
                });
            }

            function updateSenatorSelection(checkbox) {
                let candidateId = checkbox.val();
                let positionId = checkbox.attr("data-positionid");

                if (checkbox.is(":checked")) {
                    if (selectedSenators.length < 12) {
                        selectedSenators.push({ CandidateId: parseInt(candidateId), PositionId: parseInt(positionId) });
                    } else {
                        checkbox.prop("checked", false);
                        alert("⚠️ You can only select up to 12 senators.");
                    }
                } else {
                    selectedSenators = selectedSenators.filter(senator => senator.CandidateId !== parseInt(candidateId));
                }

                $("#senators-count").text(selectedSenators.length);
            }

            function loadSanggunianPanlalawigan() {
                $.ajax({
                    url: '/User/GetCandidatesByPosition',
                    type: 'GET',
                    data: { positionName: "Sangguniang Panlalawigan Members" },
                    success: function (response) {
                        if (response.success && response.data.length > 0) {
                            let sanggunianPanlalawiganContainer = $("#sanggunianPanlalawigan-container");
                            sanggunianPanlalawiganContainer.empty();

                            response.data.forEach(candidate => {
                                let checkbox = `<div>
                                    <input type="checkbox" class="sanggunianPanlalawigan-checkbox" value="${candidate.candidateId}" data-positionid="${candidate.positionId}">
                                    <label>${candidate.fullName}</label>
                                </div>`;
                                sanggunianPanlalawiganContainer.append(checkbox);
                            });

                            $(".sanggunianPanlalawigan-checkbox").change(function () {
                                updateSanggunianPanlalawiganSelection($(this));
                            });
                        }
                    },
                    error: function (xhr) {
                        console.error("❌ Error retrieving senator candidates:", xhr.responseText);
                    }
                });
            }

            function updateSanggunianPanlalawiganSelection(checkbox) {
                let candidateId = checkbox.val();
                let positionId = checkbox.attr("data-positionid");

                if (checkbox.is(":checked")) {
                    if (selectedSanggunianPanlalawigan.length < 5) {
                        selectedSanggunianPanlalawigan.push({ CandidateId: parseInt(candidateId), PositionId: parseInt(positionId) });
                    } else {
                        checkbox.prop("checked", false);
                        alert("⚠️ You can only select up to 5 sanggunian panlalawigan.");
                    }
                } else {
                    selectedSanggunianPanlalawigan = selectedSanggunianPanlalawigan.filter(sanggunianPanlalawigan => sanggunianPanlalawigan.CandidateId !== parseInt(candidateId));
                }

                $("#sanggunianPanlalawigan-count").text(selectedSanggunianPanlalawigan.length);
            }

            function loadSanggunianPanlungsod() {
                $.ajax({
                    url: '/User/GetCandidatesByPosition',
                    type: 'GET',
                    data: { positionName: "Sangguniang Panlungsod/Bayan Members" },
                    success: function (response) {
                        if (response.success && response.data.length > 0) {
                            let sanggunianPanlungsodContainer = $("#sanggunianPanlungsod-container");
                            sanggunianPanlungsodContainer.empty();

                            response.data.forEach(candidate => {
                                let checkbox = `<div>
                                    <input type="checkbox" class="sanggunianPanlungsod-checkbox" value="${candidate.candidateId}" data-positionid="${candidate.positionId}">
                                    <label>${candidate.fullName}</label>
                                </div>`;
                                sanggunianPanlungsodContainer.append(checkbox);
                            });

                            $(".sanggunianPanlungsod-checkbox").change(function () {
                                updateSanggunianPanlungsodSelection($(this));
                            });
                        }
                    },
                    error: function (xhr) {
                        console.error("❌ Error retrieving senator candidates:", xhr.responseText);
                    }
                });
            }

            function updateSanggunianPanlungsodSelection(checkbox) {
                let candidateId = checkbox.val();
                let positionId = checkbox.attr("data-positionid");

                if (checkbox.is(":checked")) {
                    if (selectedSanggunianPanlungsod.length < 10) {
                        selectedSanggunianPanlungsod.push({ CandidateId: parseInt(candidateId), PositionId: parseInt(positionId) });
                    } else {
                        checkbox.prop("checked", false);
                        alert("⚠️ You can only select up to 10 sanggunian panlungsod.");
                    }
                } else {
                    selectedSanggunianPanlungsod = selectedSanggunianPanlungsod.filter(sanggunianPanlungsod => sanggunianPanlungsod.CandidateId !== parseInt(candidateId));
                }

                $("#sanggunianPanlungsod-count").text(selectedSanggunianPanlungsod.length);
            }

            function loadSanggunianBarangay() {
                $.ajax({
                    url: '/User/GetCandidatesByPosition',
                    type: 'GET',
                    data: { positionName: "Sangguniang Barangay Members" },
                    success: function (response) {
                        if (response.success && response.data.length > 0) {
                            let sanggunianBarangayContainer = $("#sanggunianBarangay-container");
                            sanggunianBarangayContainer.empty();

                            response.data.forEach(candidate => {
                                let checkbox = `<div>
                                    <input type="checkbox" class="sanggunianBarangay-checkbox" value="${candidate.candidateId}" data-positionid="${candidate.positionId}">
                                    <label>${candidate.fullName}</label>
                                </div>`;
                                sanggunianBarangayContainer.append(checkbox);
                            });

                            $(".sanggunianBarangay-checkbox").change(function () {
                                updateSanggunianBarangaySelection($(this));
                            });
                        }
                    },
                    error: function (xhr) {
                        console.error("❌ Error retrieving sanggunian barangay candidates:", xhr.responseText);
                    }
                });
            }

            function updateSanggunianBarangaySelection(checkbox) {
                let candidateId = checkbox.val();
                let positionId = checkbox.attr("data-positionid");

                if (checkbox.is(":checked")) {
                    if (selectedSanggunianBarangay.length < 7) {
                        selectedSanggunianBarangay.push({ CandidateId: parseInt(candidateId), PositionId: parseInt(positionId) });
                    } else {
                        checkbox.prop("checked", false);
                        alert("⚠️ You can only select up to 7 sanggunian barangay.");
                    }
                } else {
                    selectedSanggunianBarangay = selectedSanggunianBarangay.filter(sanggunianBarangay => sanggunianBarangay.CandidateId !== parseInt(candidateId));
                }

                $("#sanggunianBarangay-count").text(selectedSanggunianBarangay.length);
            }

              function loadSanggunianKabataan() {
                $.ajax({
                    url: '/User/GetCandidatesByPosition',
                    type: 'GET',
                    data: { positionName: "Sangguniang Kabataan (SK) Members" },
                    success: function (response) {
                        if (response.success && response.data.length > 0) {
                            let sanggunianKabataanContainer = $("#sanggunianKabataan-container");
                            sanggunianKabataanContainer.empty();

                            response.data.forEach(candidate => {
                                let checkbox = `<div>
                                    <input type="checkbox" class="sanggunianKabataan-checkbox" value="${candidate.candidateId}" data-positionid="${candidate.positionId}">
                                    <label>${candidate.fullName}</label>
                                </div>`;
                                sanggunianKabataanContainer.append(checkbox);
                            });

                            $(".sanggunianKabataan-checkbox").change(function () {
                                updateSanggunianKabataanSelection($(this));
                            });
                        }
                    },
                    error: function (xhr) {
                        console.error("❌ Error retrieving sanggunian kabataan candidates:", xhr.responseText);
                    }
                });
            }

            function updateSanggunianKabataanSelection(checkbox) {
                let candidateId = checkbox.val();
                let positionId = checkbox.attr("data-positionid");

                if (checkbox.is(":checked")) {
                    if (selectedSanggunianKabataan.length < 7) {
                        selectedSanggunianKabataan.push({ CandidateId: parseInt(candidateId), PositionId: parseInt(positionId) });
                    } else {
                        checkbox.prop("checked", false);
                        alert("⚠️ You can only select up to 7 sanggunian kabataan.");
                    }
                } else {
                    selectedSanggunianKabataan = selectedSanggunianKabataan.filter(sanggunianKabataan => sanggunianKabataan.CandidateId !== parseInt(candidateId));
                }

                $("#sanggunianKabataan-count").text(selectedSanggunianKabataan.length);
            }

            $("#submitVote").click(function (e) {
                e.preventDefault();

                let voterId = 22; // Replace with actual voter ID
                let electionId = parseInt($("#electionId").val());

                if (!electionId) {
                    alert("⚠️ Election ID is missing!");
                    return;
                }

                let votes = [];
                let hasSelection = false;

                $(".candidate-dropdown").each(function () {
                    let dropdown = $(this);
                    let candidateId = dropdown.val();

                    if (candidateId && candidateId !== "") {
                        hasSelection = true;
                        let positionId = dropdown.find("option:selected").attr("data-positionid") || 0;

                        votes.push({
                            VoterId: voterId,
                            ElectionId: electionId,
                            PositionId: parseInt(positionId),
                            CandidateId: parseInt(candidateId)
                        });
                    }
                });

                if (selectedSenators.length > 0) {
                    hasSelection = true;
                    selectedSenators.forEach(senator => {
                        votes.push({
                            VoterId: voterId,
                            ElectionId: electionId,
                            PositionId: senator.PositionId,
                            CandidateId: senator.CandidateId
                        });
                    });
                }
                 if (selectedSanggunianPanlalawigan.length > 0) {
                    hasSelection = true;
                        selectedSanggunianPanlalawigan.forEach(sanggunianPanlalawigan => {
                        votes.push({
                            VoterId: voterId,
                            ElectionId: electionId,
                            PositionId: sanggunianPanlalawigan.PositionId,
                            CandidateId: sanggunianPanlalawigan.CandidateId
                        });
                    });
                }
                 if (selectedSanggunianPanlungsod.length > 0) {
                    hasSelection = true;
                        selectedSanggunianPanlungsod.forEach(sanggunianPanlungsod => {
                        votes.push({
                            VoterId: voterId,
                            ElectionId: electionId,
                            PositionId: sanggunianPanlungsod.PositionId,
                            CandidateId: sanggunianPanlungsod.CandidateId
                        });
                    });
                }
                if (selectedSanggunianBarangay.length > 0) {
                    hasSelection = true;
                        selectedSanggunianBarangay.forEach(sanggunianBarangay => {
                        votes.push({
                            VoterId: voterId,
                            ElectionId: electionId,
                            PositionId: sanggunianBarangay.PositionId,
                            CandidateId: sanggunianBarangay.CandidateId
                        });
                    });
                }
                if (selectedSanggunianKabataan.length > 0) {
                    hasSelection = true;
                        selectedSanggunianKabataan.forEach(sanggunianKabataan => {
                        votes.push({
                            VoterId: voterId,
                            ElectionId: electionId,
                            PositionId: sanggunianKabataan.PositionId,
                            CandidateId: sanggunianKabataan.CandidateId
                        });
                    });
                }
                if (!hasSelection) {
                    alert("⚠️ Please select at least one candidate.");
                    return;
                }

                console.log("Submitting votes:", votes);

                $.ajax({
                    url: "/User/SubmitVote",
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify(votes),
                    success: function (response) {
                        if (response.success) {
                            alert("✅ Vote submitted successfully!");
                            location.reload();
                        } else {
                            alert("❌ Server error: " + response.message);
                        }
                    },
                    error: function (xhr) {
                        console.error("Submit vote error:", xhr.responseText);
                        alert("❌ An error occurred while submitting your vote. Check console for details.");
                    }
                });
            });

            loadPositions();
        });
    </script>

   
</body>

</html>